{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","key","id","Media","tag","left","middle","object","body","heading","About","leaders","map","Breadcrumb","BreadcrumbItem","to","active","CardHeader","title","list","MenuItem","onClick","width","CardImgOverlay","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","JSON","stringify","alert","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","RenderDish","RenderComments","comments","postComment","dishId","cmts","comment","author","Intl","DateTimeFormat","day","month","year","format","Date","date","CommentForm","state","isModalOpen","toggleModal","setState","rating","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8daece8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading. . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard ({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    } else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    } else {\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}\r\n            >\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home (props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m1\">\r\n                    <RenderCard\r\n                        item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader ({ leader }) {\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Fade in>\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-5\">\r\n                        <Media heading>{leader.name}</Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {     \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            <Stagger in>\r\n                                {leaders}\r\n                            </Stagger>\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction MenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>   \r\n            <Link to={`/menu/${dish.id}`} >\r\n                <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />                  \r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <MenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {    \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>                        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor (props) {\r\n        super (props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"skype:confusion?chat\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".last-name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 numbers',\r\n                                        maxLength: 'Must be 15 numbers or less',\r\n                                        isNumber: 'Must be a number'\r\n                                    }}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        validEmail: 'Invalid Email Address'\r\n                                    }}\r\n                                />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Row, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish ({ dish }) {\r\n    if (dish != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments ({ comments, postComment, dishId }) {\r\n    if (comments != null) {\r\n        const cmts = comments.map((comment) => {\r\n            return (\r\n                <Fade in>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', {\r\n                            day: '2-digit',\r\n                            month: 'short',\r\n                            year: 'numeric'\r\n                        }).format(new Date(comment.date))}</p>\r\n                    </li>\r\n                </Fade>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {cmts}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal () {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit (values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"col-12\">\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" name=\"author\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Your Name\"\r\n                                        validators={{\r\n                                            minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}    \r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" \r\n                                    />\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">  \r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                    />\r\n                </div>                \r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    } \r\n}\r\n\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, Collapse, NavItem, Jumbotron, NavbarToggler,\r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav () {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal () {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin (event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'>\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'>\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'>\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'>\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\">\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}></Input>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer (props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    }).then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments ', error.message);\r\n            alert('Your comment could not be posted\\nError: ', error.message);\r\n        });\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname : firstname,\r\n        lastname: lastname,\r\n        telnum : telnum,\r\n        email : email,\r\n        agree : agree,\r\n        contactType : contactType,\r\n        message : message,\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    }).then(response => {\r\n            if (response.ok)\r\n                return response;\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => {\r\n            console.log('Post feedback ', error.message);\r\n            alert('Your feedback could not be sent\\nError: ', error.message);\r\n        });\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount () {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  onDishSelect (dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  } \r\n\r\n  render () {\r\n    const HomePage = () => {\r\n        return (\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading={this.props.promotions.isLoading}\r\n              promosErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading}\r\n              leadersErrMess={this.props.leaders.errMess}\r\n          />\r\n        );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errmess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess={this.props.comments.errmess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders}/>} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/contactus\" component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render () {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div>\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux'; \r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}